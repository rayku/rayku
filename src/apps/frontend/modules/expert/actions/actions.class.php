<?php
// auto-generated by sfPropelCrud
// date: 2009/09/07 00:53:23
?>
<?php

/**
 * expert actions.
 *
 * @package    elifes
 * @subpackage expert
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class expertActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('expert', 'list');
  }

  public function executeList()
  {
    $this->experts = ExpertPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->expert = ExpertPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->expert);
  }

  public function executeCreate()
  {
    $this->expert = new Expert();

	if($this->getUser()->getRaykuUser()->getType() == UserPeer::getTypeFromValue('expert'))
	{
		$this->expert->setUserId($this->getUser()->getRaykuUserId());
	}else
	{
		return sfView::ERROR;
	}	
	
    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->expert = ExpertPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->expert);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $expert = new Expert();
    }
    else
    {
      $expert = ExpertPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($expert);
    }

    $expert->setId($this->getRequestParameter('id'));
    $expert->setTitle($this->getRequestParameter('title'));
    $expert->setDescription($this->getRequestParameter('description'));
    $expert->setDomain($this->getRequestParameter('domain'));
    $expert->setLanguage($this->getRequestParameter('language'));
    $expert->setOnlinerate($this->getRequestParameter('onlinerate'));
    $expert->setEmailrate($this->getRequestParameter('emailrate'));
    $expert->setMoc($this->getRequestParameter('moc'));
    $expert->setRating($this->getRequestParameter('rating'));
    $expert->setUserId($this->getRequestParameter('user_id'));

    $expert->save();

    return $this->redirect('expert/show?id='.$expert->getId());
  }

  public function executeDelete()
  {
    $expert = ExpertPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($expert);

    $expert->delete();

    return $this->redirect('expert/list');
  }
}
