propel:
  _attributes:
    package: lib.model
    defaultIdMethod: native
  album:
    _attributes: { phpName: Album }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    name: { type: VARCHAR, size: '150', required: false }
    description: { type: LONGVARCHAR, required: false }
    owner_id: { type: INTEGER, size: '11', required: false }
    created_at: { type: TIMESTAMP, required: false }
    _indexes: { album_FI_1: [owner_id] }
  bulletin:
    _attributes: { phpName: Bulletin }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    poster_id: { type: INTEGER, size: '11', required: false }
    content: { type: LONGVARCHAR, required: false }
    created_at: { type: TIMESTAMP, required: false }
    _indexes: { bulletin_FI_1: [poster_id] }
  category:
    _attributes: { phpName: Category }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    name: { type: VARCHAR, size: '50', required: true }
    description: { type: LONGVARCHAR, required: true }
    parent: { type: INTEGER, size: '11', required: true }
    prefix: { type: VARCHAR, size: '10', required: true }
    updated_at: { type: DATE, required: true }
    _uniques: { category_name_unique: [name], category_prefix_unique: [prefix] }
  chat_data:
    _attributes: { phpName: ChatData }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user_name: { type: VARCHAR, size: '100', required: true }
    expert_name: { type: VARCHAR, size: '100', required: true }
    text: { type: LONGVARCHAR, required: true }
    flag: { type: INTEGER, size: '11', required: true }
    time: { type: TIMESTAMP, required: true }
  chat_detail:
    _attributes: { phpName: ChatDetail }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user: { type: VARCHAR, size: '100', required: true }
    expert: { type: VARCHAR, size: '100', required: true }
    minutes: { type: INTEGER, size: '10', required: true }
    expert_agreed: { type: INTEGER, size: '10', required: true }
    user_ask: { type: INTEGER, size: '10', required: true }
  chat_history:
    _attributes: { phpName: ChatHistory }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user_name: { type: VARCHAR, size: '100', required: true }
    expert_name: { type: VARCHAR, size: '100', required: true }
    text: { type: LONGVARCHAR, required: true }
    time: { type: TIMESTAMP, required: true }
  chat_user:
    _attributes: { phpName: ChatUser }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user_name: { type: VARCHAR, size: '100', required: true }
    status: { type: INTEGER, size: '11', required: true }
  comment:
    _attributes: { phpName: Comment }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    poster_id: { type: INTEGER, size: '11', required: false }
    picture_id: { type: INTEGER, size: '11', required: false }
    video_id: { type: INTEGER, size: '11', required: false }
    content: { type: LONGVARCHAR, required: false }
    created_at: { type: TIMESTAMP, required: false }
    type: { type: INTEGER, size: '11', required: false }
    approved: { type: INTEGER, size: '11', required: false, defaultValue: '0' }
    _indexes: { comment_FI_1: [poster_id], comment_FI_2: [picture_id], comment_FI_3: [video_id] }
  expert:
    _attributes: { phpName: Expert }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user_id: { type: INTEGER, size: '11', required: true, foreignTable: user, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    title: { type: VARCHAR, size: '100', required: true }
    description: { type: LONGVARCHAR, required: true }
    domain: { type: VARCHAR, size: '100', required: true }
    language: { type: VARCHAR, size: '100', required: true }
    onlinerate: { type: FLOAT, required: false }
    emailrate: { type: FLOAT, required: false }
    moc: { type: VARCHAR, size: '100', required: false }
    rating: { type: INTEGER, size: '11', required: true, defaultValue: '0' }
    created_at: { type: TIMESTAMP, required: true }
    updated_at: { type: TIMESTAMP, required: true }
    _indexes: { expert_FI_1: [user_id] }
  expert_category:
    _attributes: { phpName: ExpertCategory }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user_id: { type: INTEGER, size: '11', required: true, foreignTable: user, foreignReference: id, onDelete: RESTRICT, onUpdate: RESTRICT }
    category_id: { type: INTEGER, size: '11', required: true, foreignTable: category, foreignReference: id, onDelete: RESTRICT, onUpdate: RESTRICT }
    _indexes: { expert_category_FI_1: [user_id], expert_category_FI_2: [category_id] }
  experts_admin_payout:
    _attributes: { phpName: ExpertsAdminPayout }
    id: { type: INTEGER, size: '100', primaryKey: true, autoIncrement: true, required: true }
    expert_id: { type: INTEGER, size: '10', required: true }
    amount: { type: FLOAT, size: '5', scale: '2', required: true }
    paypal_id: { type: VARCHAR, size: '100', required: true }
    paid: { type: INTEGER, size: '11', required: true }
  experts_debit_details:
    _attributes: { phpName: ExpertsDebitDetails }
    id: { type: INTEGER, size: '100', primaryKey: true, autoIncrement: true, required: true }
    expert_id: { type: INTEGER, size: '10', required: true }
    amount: { type: FLOAT, size: '5', scale: '2', required: true }
    time: { type: TIMESTAMP, required: true }
  experts_final_credit:
    _attributes: { phpName: ExpertsFinalCredit }
    id: { type: INTEGER, size: '100', primaryKey: true, autoIncrement: true, required: true }
    expert_id: { type: INTEGER, size: '10', required: true }
    amount: { type: FLOAT, size: '5', scale: '2', required: true }
  experts_promo_text:
    _attributes: { phpName: ExpertsPromoText }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    exp_id: { type: INTEGER, size: '11', required: true }
    content: { type: LONGVARCHAR, required: true }
  forum:
    _attributes: { phpName: Forum }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    name: { type: VARCHAR, size: '100', required: false }
    description: { type: LONGVARCHAR, required: false }
    type: { type: INTEGER, size: '11', required: false }
    entity_id: { type: INTEGER, size: '11', required: false }
    top_or_bottom: { type: INTEGER, size: '10', required: true }
  forum_answer:
    _attributes: { phpName: ForumAnswer }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    answer: { type: LONGVARCHAR, required: true }
    forum_question_id: { type: INTEGER, size: '11', required: true }
    user_id: { type: INTEGER, size: '11', required: true }
    best_response: { type: INTEGER, size: '11', required: true, defaultValue: '0' }
    created_at: { type: TIMESTAMP, required: true }
    updated_at: { type: TIMESTAMP, required: true }
    _indexes: { forum_answer_FI_1: [forum_question_id], forum_answer_FI_2: [user_id] }
  forum_question:
    _attributes: { phpName: ForumQuestion }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    title: { type: VARCHAR, size: '100', required: true }
    question: { type: LONGVARCHAR, required: true }
    category_id: { type: INTEGER, size: '11', required: true }
    user_id: { type: INTEGER, size: '11', required: true }
    visible: { type: INTEGER, size: '11', required: true, defaultValue: '0' }
    cancel: { type: INTEGER, size: '10', required: true }
    notify: { type: INTEGER, size: '11', required: true, defaultValue: '0' }
    tags: { type: VARCHAR, size: '100', required: true }
    created_at: { type: TIMESTAMP, required: true }
    updated_at: { type: TIMESTAMP, required: true }
    _indexes: { forum_question_FI_1: [category_id], forum_question_FI_2: [user_id] }
  history:
    _attributes: { phpName: History }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user_id: { type: INTEGER, size: '11', required: false, foreignTable: user, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    entity_type: { type: VARCHAR, size: '100', required: false }
    data: { type: VARCHAR, size: '255', required: false }
    created_at: { type: TIMESTAMP, required: false }
    _indexes: { history_FI_1: [user_id] }
  item:
    _attributes: { phpName: Item }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    size_id: { type: INTEGER, size: '11', required: false, foreignTable: size, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    item_type_id: { type: INTEGER, size: '11', required: false, foreignTable: item_type, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    title: { type: VARCHAR, size: '255', required: false }
    description: { type: LONGVARCHAR, required: false }
    price_per_unit: { type: INTEGER, size: '11', required: false }
    shipping_charge_per_unit: { type: INTEGER, size: '11', required: false }
    actual_value: { type: INTEGER, size: '11', required: false }
    actual_value_currency: { type: VARCHAR, size: '5', required: false }
    quantity: { type: INTEGER, size: '11', required: false }
    image: { type: VARCHAR, size: '255', required: false }
    features: { type: LONGVARCHAR, required: false }
    is_active: { type: INTEGER, size: '11', required: false }
    created_at: { type: TIMESTAMP, required: false }
    updated_at: { type: TIMESTAMP, required: false }
    _indexes: { item_FI_1: [size_id], item_FI_2: [item_type_id] }
  item_rating:
    _attributes: { phpName: ItemRating }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    item_id: { type: INTEGER, size: '11', required: false, foreignTable: item, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    user_id: { type: INTEGER, size: '11', required: false, foreignTable: user, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    rating: { type: INTEGER, size: '11', required: false }
    _indexes: { item_rating_FI_1: [item_id], item_rating_FI_2: [user_id] }
  item_type:
    _attributes: { phpName: ItemType }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    name: { type: VARCHAR, size: '255', required: false }
    created_at: { type: TIMESTAMP, required: false }
  live_video_chat:
    _attributes: { phpName: LiveVideoChat }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    receiver_id: { type: INTEGER, size: '11', required: true }
    sender_id: { type: INTEGER, size: '11', required: true }
    classroom_id: { type: INTEGER, size: '11', required: true }
    approved: { type: INTEGER, size: '11', required: true }
    _indexes: { video_live_chat_FI_1: [receiver_id], video_live_chat_FI_2: [sender_id] }
  notification_emails:
    _attributes: { phpName: NotificationEmails }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user_id: { type: INTEGER, size: '100', required: true }
    on_off: { type: INTEGER, size: '11', required: true }
  offer_voucher:
    _attributes: { phpName: OfferVoucher }
    id: { type: INTEGER, size: '40', primaryKey: true, autoIncrement: true, required: true }
    code: { type: VARCHAR, size: '100', required: true }
    valid_till_date: { type: DATE, required: true }
    is_used: { type: INTEGER, size: '10', required: true }
    created_at: { type: TIMESTAMP, required: true }
    is_active: { type: INTEGER, size: '10', required: true }
    price: { type: INTEGER, size: '100', required: true }
  offer_voucher1:
    _attributes: { phpName: OfferVoucher1 }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user_id: { type: INTEGER, size: '11', required: false, foreignTable: user, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    code: { type: VARCHAR, size: '255', required: false }
    valid_till_date: { type: DATE, required: false }
    is_used: { type: INTEGER, size: '11', required: false }
    created_at: { type: TIMESTAMP, required: false }
    is_active: { type: INTEGER, size: '11', required: false }
    price: { type: INTEGER, size: '11', required: false, defaultValue: '0' }
    _indexes: { user_id: [user_id], id: [id] }
  picture:
    _attributes: { phpName: Picture }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    name: { type: VARCHAR, size: '150', required: false }
    description: { type: LONGVARCHAR, required: false }
    album_id: { type: INTEGER, size: '11', required: false, foreignTable: album, foreignReference: id, onDelete: RESTRICT, onUpdate: RESTRICT }
    owner_id: { type: INTEGER, size: '11', required: false, foreignTable: user, foreignReference: id, onDelete: RESTRICT, onUpdate: RESTRICT }
    created_at: { type: TIMESTAMP, required: false }
    _indexes: { picture_FI_1: [album_id], picture_FI_2: [owner_id] }
  post:
    _attributes: { phpName: Post }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    poster_id: { type: INTEGER, size: '11', required: true }
    thread_id: { type: INTEGER, size: '11', required: true }
    created_at: { type: TIMESTAMP, required: true }
    updated_at: { type: TIMESTAMP, required: true }
    content: { type: LONGVARCHAR, required: true }
    best_response: { type: INTEGER, size: '11', required: true }
  private_message:
    _attributes: { phpName: PrivateMessage }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    subject: { type: VARCHAR, size: '150', required: false }
    body: { type: LONGVARCHAR, required: false }
    sender_id: { type: INTEGER, size: '11', required: false }
    recipient_id: { type: INTEGER, size: '11', required: false }
    status: { type: INTEGER, size: '11', required: false, defaultValue: '0' }
    read_status: { type: INTEGER, size: '11', required: false, defaultValue: '0' }
    created_at: { type: TIMESTAMP, required: false }
    type: { type: INTEGER, size: '11', required: false, defaultValue: '0' }
    _indexes: { private_message_FI_1: [sender_id], private_message_FI_2: [recipient_id] }
  purchase_detail:
    _attributes: { phpName: PurchaseDetail }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user_id: { type: INTEGER, size: '11', required: false, foreignTable: user, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    sales_id: { type: INTEGER, size: '11', required: false, foreignTable: sales, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    transaction_id: { type: INTEGER, size: '11', required: false }
    full_name: { type: VARCHAR, size: '255', required: false }
    email: { type: VARCHAR, size: '255', required: false }
    address1: { type: VARCHAR, size: '255', required: false }
    address2: { type: VARCHAR, size: '255', required: false }
    city: { type: VARCHAR, size: '255', required: false }
    state: { type: VARCHAR, size: '255', required: false }
    country: { type: VARCHAR, size: '255', required: false }
    telephone_number: { type: VARCHAR, size: '255', required: false }
    zip: { type: VARCHAR, size: '20', required: false, defaultValue: '0' }
    _indexes: { purchase_detail_FI_1: [user_id], purchase_detail_FI_2: [sales_id] }
  sales:
    _attributes: { phpName: Sales }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    offer_voucher_id: { type: INTEGER, size: '11', required: false, foreignTable: offer_voucher1, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    status_id: { type: INTEGER, size: '11', required: false, foreignTable: status, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    total_sale_price: { type: INTEGER, size: '11', required: false }
    total_shipping_charge: { type: INTEGER, size: '11', required: false }
    quantity: { type: INTEGER, size: '11', required: false }
    created_at: { type: TIMESTAMP, required: false }
    updated_at: { type: TIMESTAMP, required: false }
    total_item_price: { type: INTEGER, size: '11', required: false, defaultValue: '0' }
    _indexes: { sales_FI_1: [offer_voucher_id], sales_FI_2: [status_id] }
  sales_detail:
    _attributes: { phpName: SalesDetail }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    item_id: { type: INTEGER, size: '11', required: false, foreignTable: item, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    total_price: { type: INTEGER, size: '11', required: false }
    total_shipping_charge: { type: INTEGER, size: '11', required: false }
    quantity: { type: INTEGER, size: '11', required: false }
    transaction_id: { type: INTEGER, size: '11', required: false }
    created_at: { type: TIMESTAMP, required: false }
    updated_at: { type: TIMESTAMP, required: false }
    _indexes: { sales_detail_FI_1: [item_id] }
  shopping_cart:
    _attributes: { phpName: ShoppingCart }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    item_id: { type: INTEGER, size: '11', required: false, foreignTable: item, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    user_id: { type: INTEGER, size: '11', required: false, foreignTable: user, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    quantity: { type: INTEGER, size: '11', required: false }
    total_price: { type: INTEGER, size: '11', required: false }
    total_shipping_charge: { type: INTEGER, size: '11', required: false }
    created_at: { type: TIMESTAMP, required: false }
    updated_at: { type: TIMESTAMP, required: false }
    is_active: { type: TINYINT, size: '4', required: false, defaultValue: '0' }
    _indexes: { shopping_cart_FI_1: [item_id], shopping_cart_FI_2: [user_id] }
  shout:
    _attributes: { phpName: Shout }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    poster_id: { type: INTEGER, size: '11', required: false, foreignTable: user, foreignReference: id, onDelete: RESTRICT, onUpdate: RESTRICT }
    recipient_id: { type: INTEGER, size: '11', required: false, foreignTable: user, foreignReference: id, onDelete: RESTRICT, onUpdate: RESTRICT }
    created_at: { type: TIMESTAMP, required: false }
    content: { type: LONGVARCHAR, required: false }
    _indexes: { shout_FI_1: [poster_id], shout_FI_2: [recipient_id] }
  size:
    _attributes: { phpName: Size }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    name: { type: VARCHAR, size: '255', required: false }
  status:
    _attributes: { phpName: Status }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    name: { type: VARCHAR, size: '255', required: false }
  students_instant_questions:
    _attributes: { phpName: StudentsInstantQuestions }
    id: { type: INTEGER, size: '10', primaryKey: true, autoIncrement: true, required: true }
    student_question: { type: LONGVARCHAR, required: true }
    student_id: { type: INTEGER, size: '10', required: true }
    expert_id: { type: INTEGER, size: '10', required: true }
    experts_accept: { type: INTEGER, size: '10', required: true }
  thread:
    _attributes: { phpName: Thread }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    poster_id: { type: INTEGER, size: '11', required: true }
    forum_id: { type: INTEGER, size: '11', required: true }
    title: { type: VARCHAR, size: '100', required: true }
    tags: { type: VARCHAR, size: '100', required: true }
    visible: { type: INTEGER, size: '11', required: true, defaultValue: '1' }
    cancel: { type: INTEGER, size: '11', required: true }
    category_id: { type: INTEGER, size: '11', required: true }
    notify_email: { type: INTEGER, size: '10', required: true }
    notify_pm: { type: INTEGER, size: '10', required: true }
    notify_sms: { type: INTEGER, size: '10', required: true }
    cell_number: { type: INTEGER, size: '30', required: true }
    school_grade: { type: VARCHAR, size: '100', required: true }
    created_at: { type: TIMESTAMP, required: true }
    lastpost_at: { type: TIMESTAMP, required: true }
    stickie: { type: INTEGER, required: true }
  user:
    _attributes: { phpName: User }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    picture_id: { type: INTEGER, size: '11', required: false, foreignTable: picture, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    username: { type: VARCHAR, size: '100', required: false }
    email: { type: VARCHAR, size: '100', required: false }
    password: { type: VARCHAR, size: '40', required: false }
    points: { type: INTEGER, size: '11', required: false, defaultValue: '0' }
    created_at: { type: TIMESTAMP, required: false }
    last_activity_at: { type: TIMESTAMP, required: false }
    type: { type: INTEGER, size: '11', required: false, defaultValue: '0' }
    hidden: { type: INTEGER, size: '11', required: false, defaultValue: '0' }
    name: { type: VARCHAR, size: '100', required: false }
    gender: { type: INTEGER, size: '11', required: false }
    hometown: { type: VARCHAR, size: '100', required: false }
    home_phone: { type: VARCHAR, size: '20', required: false }
    mobile_phone: { type: VARCHAR, size: '20', required: false }
    birthdate: { type: DATE, required: false }
    address: { type: LONGVARCHAR, required: false }
    relationship_status: { type: INTEGER, size: '11', required: false, defaultValue: '0' }
    show_email: { type: INTEGER, size: '11', required: false, defaultValue: '1' }
    show_gender: { type: INTEGER, size: '11', required: false, defaultValue: '1' }
    show_hometown: { type: INTEGER, size: '11', required: false, defaultValue: '1' }
    show_home_phone: { type: INTEGER, size: '11', required: false, defaultValue: '1' }
    show_mobile_phone: { type: INTEGER, size: '11', required: false, defaultValue: '1' }
    show_birthdate: { type: INTEGER, size: '11', required: false, defaultValue: '1' }
    show_address: { type: INTEGER, size: '11', required: false, defaultValue: '1' }
    show_relationship_status: { type: INTEGER, size: '11', required: false, defaultValue: '1' }
    password_recover_key: { type: VARCHAR, size: '40', required: false }
    cookie_key: { type: VARCHAR, size: '40', required: false }
    credit: { type: INTEGER, size: '11', required: true, defaultValue: '0' }
    invisible: { type: INTEGER, size: '11', required: true }
    notification: { type: VARCHAR, size: '10', required: true }
    phone_number: { type: VARCHAR, size: '20', required: true }
    login: { type: INTEGER, size: '10', required: true }
    credit_card: { type: VARCHAR, size: '4', required: false }
    credit_card_token: { type: VARCHAR, size: '10', required: false }
    first_charge: { type: TIMESTAMP, required: false }
    _indexes: { user_FI_1: [picture_id] }
    _uniques: { user_username_unique: [username], user_email_unique: [email], user_password_recover_key_unique: [password_recover_key] }
  user_awards:
    _attributes: { phpName: UserAwards }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user_id: { type: INTEGER, size: '11', required: false, foreignTable: user, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    awards: { type: INTEGER, size: '11', required: false }
    _indexes: { user_awards_FI_1: [user_id] }
  user_gtalk:
    userid: { type: INTEGER, size: '11', required: true, foreignTable: user, foreignReference: id, primaryKey: true }
    gtalkid: { type: VARCHAR, size: 100, required: true }
  video:
    _attributes: { phpName: Video }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    owner_id: { type: INTEGER, size: '11', required: false }
    name: { type: VARCHAR, size: '150', required: false }
    description: { type: LONGVARCHAR, required: false }
    type: { type: VARCHAR, size: '5', required: false }
    created_at: { type: TIMESTAMP, required: false }
    _indexes: { video_FI_1: [owner_id] }
  whiteboard_chat:
    _attributes: { phpName: WhiteboardChat }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    is_public: { type: INTEGER, size: '11', required: true }
    expert_id: { type: INTEGER, size: '11', required: false }
    asker_id: { type: INTEGER, size: '11', required: false }
    expert_nickname: { type: VARCHAR, size: '100', required: false }
    asker_nickname: { type: VARCHAR, size: '100', required: false }
    question: { type: LONGVARCHAR, required: false }
    started_at: { type: TIMESTAMP, required: false }
    ended_at: { type: TIMESTAMP, required: false }
    directory: { type: VARCHAR, size: '255', required: false }
    created_at: { type: TIMESTAMP, required: false }
    _indexes: { whiteboard_chat_FI_1: [expert_id, asker_id] }
  whiteboard_message:
    _attributes: { phpName: WhiteboardMessage }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    whiteboard_chat_id: { type: INTEGER, size: '11', required: true, foreignTable: whiteboard_chat, foreignReference: id, onDelete: CASCADE }
    user_id: { type: INTEGER, size: '11', required: false }
    message: { type: LONGVARCHAR, required: false }
    created_at: { type: TIMESTAMP, required: true }
    _indexes: { whiteboard_message_FI_1: [whiteboard_chat_id] }
  whiteboard_snapshot:
    _attributes: { phpName: WhiteboardSnapshot }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    whiteboard_chat_id: { type: INTEGER, size: '11', required: true, foreignTable: whiteboard_chat, foreignReference: id, onDelete: CASCADE }
    filename: { type: VARCHAR, size: '255', required: true }
    created_at: { type: TIMESTAMP, required: true }
    _indexes: { whiteboard_snapshot_FI_1: [whiteboard_chat_id] }
  student_questions:
    _attributes: { phpName: StudentQuestion }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    user_id: { type: INTEGER, size: '11', required: true, foreignTable: user, foreignReference: id, phpName: StudentId }
    checked_id: { type: INTEGER, size: '11', required: true, foreignTable: user, foreignReference: id, phpName: TutorId }
    category_id: { type: INTEGER, size: '11', required: true }
    course_id: { type: INTEGER, size: '11', required: true }
    question: { type: VARCHAR, size: '500', required: true }
    exe_order: { type: INTEGER, size: '11', required: true }
    time: { type: INTEGER, size: '11', required: true }
    course_code: { type: VARCHAR, size: '100', required: true }
    year: { type: VARCHAR, size: '100', required: true }
    school: { type: VARCHAR, size: '100', required: true }
    status: { type: INTEGER, size: '10', required: true }
    close: { type: INTEGER, size: '10', required: true }
    cron: { type: INTEGER, size: '10', required: true }
    source: { type: VARCHAR, size: '100', required: true }
  whiteboard_sessions:
    _attributes: { phpName: WhiteboardSession }
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    question_id: { type: INTEGER, size: '11', required: true, foreignTable: student_questions, foreignReference: id }
    user_id: { type: INTEGER, size: '11', required: true, foreignTable: user, foreignReference: id }
    type: { type: INTEGER, size: '10', required: true }
    token: { type: VARCHAR, size: '40', required: true }
    chat_id: { type: VARCHAR, size: '40' }
    last_activity: { type: INTEGER, size: '11', required: true }
  whiteboard_tutor_feedback:
    id: { type: INTEGER, size: '11', primaryKey: true, autoIncrement: true, required: true }
    whiteboard_chat_id: { type: INTEGER, size: '11', required: true, foreignTable: whiteboard_chat, foreignReference: id, onDelete: CASCADE }
    expert_id: { type: INTEGER, size: '11', required: false }
    audio: { type: INTEGER, size: '5', required: true }
    usability: { type: INTEGER, size: '5', required: true }
    overall: { type: INTEGER, size: '5', required: true }
    feedback: { type: LONGVARCHAR, required: false }
    created_at: { type: TIMESTAMP, required: true }
   
